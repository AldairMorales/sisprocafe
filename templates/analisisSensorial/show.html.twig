{% extends 'base.html.twig' %}
{% import 'macro/breadcrumb.html.twig' as breadcrumb %}
{% import 'macro/action.html.twig' as action %}

{% set _title = 'Analisis Sensorial' %}
{% set _main_title = 'Mostrar' %}
{% set _section =  'analisisSensorial_index'%}

{% block _breadcrumb %}
    {{ breadcrumb.show2(_title, _section, 'Mostrar') }}
{% endblock %}

{% block _main %}
<div class="row">
    <div class="col">
        {{ action.tbl_start() }}
            {{ action.tbl_tr('Periodo',analisisSensorial.periodo) }}
            {{ action.tbl_tr('Tikect',analisisSensorial.acopio) }}
            {{ action.tbl_tr('Fecha',analisisSensorial.fecha) }}
            {{ action.tbl_tr('certificacion',analisisSensorial.certificacion) }}
            {{ action.tbl_tr('puntaje',analisisSensorial.puntaje) }}
            {{ action.tbl_tr('Fragrancia',analisisSensorial.fragrancia) }}
            {{ action.tbl_tr('Sabor',analisisSensorial.sabor) }}
            {{ action.tbl_tr('Sabor Residual',analisisSensorial.saborResidual) }}
            {{ action.tbl_tr('acidez',analisisSensorial.acidez) }}
            {{ action.tbl_tr('cuerpo',analisisSensorial.cuerpo) }}
            {{ action.tbl_tr('Balance',analisisSensorial.balance) }}
            {{ action.tbl_tr('Uniformidad',analisisSensorial.uniformidad) }}
            {{ action.tbl_tr('tasaLimpia',analisisSensorial.tasaLimpia) }}
            {{ action.tbl_tr('dulzor',analisisSensorial.dulzor) }}
            {{ action.tbl_tr('Puntaje Catador',analisisSensorial.puntajeCatador) }}
            {{ action.tbl_tr('Descripcion',analisisSensorial.descripcion) }}
            {% include 'crud/_show_info.html.twig' with {'entity': analisisSensorial} %}
        {{ action.tbl_end() }}
    </div>
    <div class="col">
        <canvas id="myChart" class="mh-420px"></canvas>
    </div>
</div>
{% endblock %}

{% block _javascripts %}
    <script>
        
        let paths = window.location.pathname.split('/');
        let id = paths[paths.length-1];
        $.ajax({
            type: 'POST',
            url: '{{ path('analisisSensorial_busqueda') }}',
            data: {
                id: id,
            },
            success: function (result) {
                if (result) {
                    dataElement.push(result[0].fragrancia)
                    dataElement.push(result[0].sabor)
                    dataElement.push(result[0].saborResidual)
                    dataElement.push(result[0].acidez)
                    dataElement.push(result[0].cuerpo)
                    dataElement.push(result[0].balance)
                    dataElement.push(result[0].puntajeCatador)
                    dataElement.push(result[0].uniformidad)
                    dataElement.push(result[0].tasaLimpia)
                    dataElement.push(result[0].dulzor)
                } else {
                }
            }
        });
        var dataElement=[];
        var tabla=document.getElementsByTagName("td");
        for (var i=5; i<15; i++){
            dataElement.push(tabla[i].innerHTML);
        }
        console.log(dataElement);
        
        const ctx = document.getElementById('myChart').getContext('2d');
        const data = {
            labels: [
                'Fragrancia',
                'Sabor',
                'SaborResidual',
                'Acidez',
                'Cuerpo',
                'Balance',
                'puntajeCatador',
                'Uniformidad',
                'tasaLimpia',
                'dulzor'
            ],
            datasets: [{
                label: 'Conjunto de datos',
                data: dataElement,
                fill: true,
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgb(255, 99, 132)',
                pointBackgroundColor: 'rgb(255, 99, 132)',
                pointBorderColor: '#fff',
                pointHoverBackgroundColor: '#fff',
                pointHoverBorderColor: 'rgb(255, 99, 132)'
            }]
        };
        // <block:config:0>
        const config = {
            type: 'radar',
            data: data,
            options: {
                scales: {
                    r: {
                        angleLines: {
                            display: false
                        },
                        suggestedMin: 1,
                        suggestedMax: 10
                    }
                }
            },
        };
        const myChart = new Chart(ctx,config);

    </script>
{% endblock %}